<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="member">

		<insert id="insertMember" parameterType="m">
			insert into member_tbl values(
				member_seq.nextval,
				#{memberId},
				#{memberPw},
				#{memberName},
				#{memberEmail},
				#{memberPhone},
				#{memberAddr},
				#{memberGender},
				to_date(#{memberBday},'yyyymmdd'),
				#{memberAccount},
				#{memberPath},
				#{memberAgree},
				1,
				#{memberBank},
				sysdate,
				#{memberZoneCode}
			)
			
<!--★ -->	<selectKey resultType="_int" order="AFTER" keyProperty="memberNo"> <!-- order:insert쿼리문 AFTER에 동작해야 하니까 / keyProperty:결과값을 담아줄 변수명-->
				select max(member_no) from member_tbl
			</selectKey>
		</insert>



		<select id="selectOneMember" parameterType="m" resultType="m">
			select 
				member_no as memberNo,
				member_id as memberId,
				member_pw as memberPw,
				member_name as memberName,
				member_email as memberEmail,
				member_phone as memberPhone,
				member_addr as memberAddr,
				member_gender as memberGender,
				to_char(member_bday,'""YYYY"년"MM"월"DD"일"') as memberBday,
				member_account as memberAccount,
				member_path as memberPath,
				member_agree as memberAgree,
				member_status as memberStatus,
				member_bank as memberBank,
				reg_date as regDate,
				member_zonecode as memberZoneCode
			from member_tbl
			<trim prefix="where" prefixOverrides="and/or" > 
			<if test="memberId != null">
			member_id=#{memberId} and member_status!=3
			</if>
			<if test="memberPw != null">
			and member_pw=#{memberPw}
			</if>
			<if test="memberNo==0 and memberName != null and memberPhone != null"> <!-- 이름&폰번으로 아이디찾기 -->
			member_name=#{memberName} and member_phone=#{memberPhone} and member_status!=3
			</if>
			<if test="memberNo==0 and memberName != null and memberEmail != null"> <!-- 이름&이메일로 아이디찾기 -->
			member_name=#{memberName} and member_email=#{memberEmail} and member_status!=3
			</if>
			<if test="memberNo==0 and memberPhone != null"> <!-- 아이디&폰번호로 비번찾기 -->
			and member_phone=#{memberPhone} and member_status!=3
			</if>
			<if test="memberNo==0 and memberEmail != null"> <!-- 아이디&이메일로 비번찾기 -->
			and member_email=#{memberEmail} and member_status!=3
			</if>
			</trim>
		</select> 
	

		
		
		
		<update id="updateMember" parameterType="m">
			update member_tbl
			set
				member_phone = #{memberPhone},
				member_email = #{memberEmail},
				member_zonecode = #{memberZoneCode},
				member_addr = #{memberAddr},
				member_bank = #{memberBank},
				member_account = #{memberAccount},
				member_agree = #{memberAgree}
				<if test="memberBday != null">
					,member_bday = to_date(#{memberBday},'yyyymmdd')
				</if>
				<if test="memberPath != null">
					,member_path=#{memberPath}
				</if>
			where member_no=#{memberNo}
		</update>
		
		
		
		<update id="updateNewPwMember" parameterType="m">
			update member_tbl
			set
				member_pw = #{memberPw}
			where 
				member_id = #{memberId}
		</update>
		
		
		
		
		<insert id="insertOutReason" parameterType="out">
			insert into member_out values(
				#{memberId},
				#{outReason},
				#{outContent}
			)
		</insert>
		
		
		<update id="updateMemberStatus" parameterType="string">
			update member_tbl
			set
				member_status = 3
			where 
				member_id = #{parameter}
		</update>
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<select id="selectAllMember" resultType="m">
		select
			member_no as memberNo,
			member_id as memberId,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			member_addr as memberAddr,
			member_gender as memberGender,
			to_char(member_bday, 'YYYY-MM-DD') as memberBday,
			member_account as memberAccount,
			member_path as memberPath,
			member_agree as memberAgree,
			member_status as memberStatus,
			member_bank as memberBank,
			reg_date as regDate,
			member_zonecode as memberZoneCode
		from member_tbl where member_bday is not null
	</select>
</mapper>
