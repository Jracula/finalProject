<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="member">

		<insert id="insertMember" parameterType="m">
			insert into member_tbl values(
				member_seq.nextval,
				#{memberId},
				#{memberPw},
				#{memberName},
				#{memberEmail},
				#{memberPhone},
				#{memberAddr},
				#{memberGender},
				to_date(#{memberBday},'yyyymmdd'),
				#{memberAccount},
				#{memberPath},
				#{memberAgree},
				1,
				#{memberBank},
				sysdate,
				#{memberZoneCode}
			)
			
<!--★ -->	<selectKey resultType="_int" order="AFTER" keyProperty="memberNo"> <!-- order:insert쿼리문 AFTER에 동작해야 하니까 / keyProperty:결과값을 담아줄 변수명-->
				select max(member_no) from member_tbl
			</selectKey>
		</insert>



		<select id="selectOneMember" parameterType="m" resultType="m">
			select 
				member_no as memberNo,
				member_id as memberId,
				member_pw as memberPw,
				member_name as memberName,
				member_email as memberEmail,
				member_phone as memberPhone,
				member_addr as memberAddr,
				member_gender as memberGender,
				to_char(member_bday,'""YYYY"년"MM"월"DD"일"') as memberBday,
				member_account as memberAccount,
				member_path as memberPath,
				member_agree as memberAgree,
				member_status as memberStatus,
				member_bank as memberBank,
				reg_date as regDate,
				member_zonecode as memberZoneCode
			from member_tbl
			<trim prefix="where" prefixOverrides="and/or" > 
			<if test="memberId != null">
			member_id=#{memberId} and member_status!=3
			</if>
			<if test="memberPw != null">
			and member_pw=#{memberPw}
			</if>
			<if test="memberNo==0 and memberName != null and memberPhone != null"> <!-- 이름&폰번으로 아이디찾기 -->
			member_name=#{memberName} and member_phone=#{memberPhone} and member_status!=3
			</if>
			<if test="memberNo==0 and memberName != null and memberEmail != null"> <!-- 이름&이메일로 아이디찾기 -->
			member_name=#{memberName} and member_email=#{memberEmail} and member_status!=3
			</if>
			<if test="memberNo==0 and memberPhone != null"> <!-- 아이디&폰번호로 비번찾기 -->
			and member_phone=#{memberPhone} and member_status!=3
			</if>
			<if test="memberNo==0 and memberEmail != null"> <!-- 아이디&이메일로 비번찾기 -->
			and member_email=#{memberEmail} and member_status!=3
			</if>
			</trim>
		</select> 
	
		<select id="selectDupMember" parameterType="string" resultType="m">
			select member_id as memberId
			from member_tbl
			where member_id=#{parameter}
		</select>
		
		
		
		<update id="updateMember" parameterType="m">
			update member_tbl
			set
				member_phone = #{memberPhone},
				member_email = #{memberEmail},
				member_zonecode = #{memberZoneCode},
				member_addr = #{memberAddr},
				member_bank = #{memberBank},
				member_account = #{memberAccount},
				member_agree = #{memberAgree}
				<if test="memberBday != null">
					,member_bday = to_date(#{memberBday},'yyyymmdd')
				</if>
				<if test="memberPath != null">
					,member_path=#{memberPath}
				</if>
			where member_no=#{memberNo}
		</update>
		
		
		
		<update id="updateNewPwMember" parameterType="m">
			update member_tbl
			set
				member_pw = #{memberPw}
			where 
				member_id = #{memberId}
		</update>
		
		
		
		
		<insert id="insertOutReason" parameterType="out">
			insert into member_out values(
				#{memberId},
				#{outReason},
				#{outContent}
			)
		</insert>
		
		
		<update id="updateMemberStatus" parameterType="string">
			update member_tbl
			set
				member_status = 3
			where 
				member_id = #{parameter}
		</update>
		
		
		
		<select id="selectMyBoardList" parameterType="map" resultType="b">
			select * from 
			    (select * from
			        (select rownum as rnum, b.* from
			            (select
			                board_no as boardNo,
			                board_name as boardName,
			                board_writer as boardWriter,
			                board_date as boardDate,
			                to_char(board_start,'""YYYY"년"MM"월"DD"일"') as boardStart,
			                to_char(board_end,'""YYYY"년"MM"월"DD"일"') as boardEnd,
			                (select count(*)
			                from 
			                    (select *
			                    from board_tbl 
			                    join board_join using(board_no))
			                where board_no=board.board_no) as joinCnt
			            from board_tbl board
			        order by 1 desc) b)
			    where rnum between #{start} and #{end})
			where boardwriter=#{memberId}
		</select>
		
		
		
		<select id="myTotalCount" resultType="_int">
			select count(*) from board_tbl
			where board_writer = #{memberId}
		</select>
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	<select id="selectAllMember" resultType="m">
		select
			member_no as memberNo,
			member_id as memberId,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			member_addr as memberAddr,
			member_gender as memberGender,
			to_char(member_bday, 'YYYY-MM-DD') as memberBday,
			member_account as memberAccount,
			member_path as memberPath,
			member_agree as memberAgree,
			member_status as memberStatus,
			member_bank as memberBank,
			reg_date as regDate,
			member_zonecode as memberZoneCode
		from member_tbl where member_bday is not null
	</select>
	
	
	
	
	
	<update id="updateMemberNewPhone" parameterType="m">
		update member_tbl
		   set
			   member_phone = #{memberPhone}
		 where
		 	   member_no = #{memberNo}
	</update>
	
	
	
	
	<select id="selectMyJoiner" resultType="bj" parameterType="_int">
		select
		    bj.join_no as joinNo,
		    bj.member_no as memberNo,
		    bj.payer_name as payerName,
		    to_char(bj.payer_date,'""YYYY"년 "MM"월 "DD"일"') as payerDate,
		    bj.refund_account as refundAccount,
		    bj.refund_bank	as refundBank,
		    bj.refund_name as refundName,
		    bj.receiver_name as receiverName,
		    bj.receiver_addr as receiverAddr,
		    bj.receiver_phone as receiverPhone,
		    bj.deposit_price as depositPrice
		from board_join bj 
		join board_tbl b on b.board_no = bj.board_no
		join member_tbl m on m.member_no = bj.member_no
		where b.board_no = #{parameter}
	</select>
	
	
	<select id="selectJoinerOrder" resultType="bl" parameterType="_int">
		select
		    bj.join_no as joinNo,
		    bo.detail_name as oderName,
		    bo.detail_price as orderPrice,
		    bl.order_count as orderCount
		from board_join bj
		join board_order bl on bj.join_no = bl.join_no
		join board_option bo on bl.option_no = bo.option_no
		where bj.join_no = #{parameter}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	<select id="selectTotalPoint" resultType="point" parameterType="_int">
		select nvl(
		        (select sum(point_ea) as pluspoint
		        from point_tbl
		        where point_status in (0,1,2,4,5)
		        and member_no = #{parameter})
		    -
		        nvl((select sum(point_ea) as minuspoint
		        from point_tbl
		        where point_status in (3,6)
		        and member_no = #{parameter}),0)
		        ,0)as pointEa
		from dual
	</select>
	
	
	<insert id="insertFirstPoint" parameterType="_int">
		insert into point_tbl values
		(point_tbl_seq.nextval, #{memberNo}, 2000, sysdate, 1)
	</insert>
	
	
	
	
</mapper>
